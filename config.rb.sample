# coding: utf-8

module Profilify
  module Config
    # Your Twitter app auth details from https://dev.twitter.com/
    CONSUMER_KEY       = ""
    CONSUMER_SECRET    = ""
    OAUTH_TOKEN        = ""
    OAUTH_TOKEN_SECRET = ""

    NAME           = "" # Twitter name to append kaomoji to
    USERNAME       = "" # Username of your account
    MUSIC_USERNAME = "" # Username of the music account

    AMOUNT = 1000 # Total tweets to classify
    RECENT = (AMOUNT * 0.1) - 1 # Recent tweets to compare with

    UPDATE_BIO     = true
    UPDATE_MUSIC   = false # Only effective if UPDATE_BIO is true
    UPDATE_EMOTION = true # Only effective if UPDATE_BIO is true
    UPDATE_AVATAR  = false
    UPDATE_KAOMOJI = false

    # Song extraction
    # This does its best to extract the song title and album artist from a tweet
    # http://regex101.com/r/hH6gR0
    MUSIC_REGEX = /^(?:#nowplaying )?(?<title>.*?)(?: (?:\(|\{|\[).*)? (?:-|–|—|by) (?<artist>.*?)(?: fe?a?t.*| #nowplaying)? *$/i

    # Maximum age of the song tweet in hours
    MUSIC_MAX_AGE = 2

    # Statements at the start of the bio
    BIO_STATEMENT = [
      "I am the best!"
    ]

    # Short phrases of likes
    SHORT = [
      "kittens", "puppies", "llamas", "fruits", "Ruby", "programming",
      "Twitter", "cake", "coffee"
    ]

    # Likes with reasons
    LONG = {
        "kittens" => "for their cute furry paws",
        "programming" => "for its many uses",
        "cake" => "because it tastes the best"
    }.map { |k, v| k + " " + v }

    # Avatars to use for different emotional states
    # Located in the images folder
    AVATARS = {
      happy:   ["happy01.png"],
      angry:   ["angry01.png"],
      sad:     ["sad01.png"],
      loving:  ["loving01.png"],
      excited: ["exited01.png"],
      silly:   ["silly01.png"]
    }

    # Descriptions of emotional states
    EMOTIONAL_STATES = {
      happy:   ["happy ^_^"],
      angry:   ["angry >_<"],
      sad:     ["sad :("],
      loving:  ["loving~"],
      excited: ["excited :D"],
      silly:   ["silly ;p"]
    }

    # Kaomoji for different emotional states
    KAOMOJI = {
      happy:   ["(o^_^)o", "o(^_^o)"],
      angry:   ["(◣_◢)", "(*≧m≦*)", "(¬､¬)", "o(≧o≦)o"],
      sad:     ["o(╥﹏╥)o", "(╥﹏╥)", "(T.T;)"],
      loving:  ["(✿ ♥‿♥)", "✿♥‿♥✿"],
      excited: ["Ｏ(≧▽≦)Ｏ", "(ﾉ≧∀≦)ﾉ"],
      silly:   ["（・∀・）", "(●´艸`)"]
    }

    # "Unknown" will be used if there's insufficient
    # data to analyze emotional state
    AVATARS[:unknown]          = ["unknown.jpg"]
    EMOTIONAL_STATES[:unknown] = ["okay."]
    KAOMOJI[:unknown]          = ["┗(･ω･;)┛", "(•ิ_•ิ)?"]

    # If no emotion deviates more than DEVIATION_THRESHOLD
    # from the average, "neutral" will be used
    DEVIATION_THRESHOLD        = 0.05
    AVATARS[:neutral]          = ["neutral.jpg"]
    EMOTIONAL_STATES[:neutral] = ["okay."]
    KAOMOJI[:neutral]          = ["(｡･･｡)", "(｡^^｡)"]

    PATH_ROOT     = File.expand_path(File.dirname(__FILE__))
    PATH_EMOTIONS = File.join(PATH_ROOT, "emotions.tsv")
    PATH_CORPUS   = File.join(PATH_ROOT, "#{ USERNAME }.json")

    IGNORE_REPLIES  = false # Ignore tweets that are @replies
    IGNORE_RETWEETS = true # Ignore tweets beginning with RT
    IGNORE_QUOTES   = true # Ignore tweets beginning with MT/QT
  end
end
